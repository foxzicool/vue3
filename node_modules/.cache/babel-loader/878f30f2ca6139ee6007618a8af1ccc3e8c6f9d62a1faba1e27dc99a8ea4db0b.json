{"ast":null,"code":"import ProductModal from '@/components/ProductModal.vue';\nimport Pagination from '@/components/Pagination.vue';\nimport DelModal from '@/components/DelModal.vue';\nexport default {\n  data() {\n    return {\n      products: [],\n      pagination: {},\n      // 可根据后端返回的分页信息进行更新\n      tempProduct: {},\n      isNew: false,\n      isLoading: false // 這個狀態可以保留，以便未來重新啟用加載功能\n    };\n  },\n\n  components: {\n    ProductModal,\n    DelModal,\n    Pagination\n  },\n  inject: ['emitter'],\n  methods: {\n    getProducts(page = 1) {\n      const api = `/api/product-data?page=${page}`;\n      this.isLoading = true;\n      this.$http.get(api).then(res => {\n        this.isLoading = false;\n        this.products = res.data;\n        // 更新分页信息，根据后端返回的结构\n      });\n    },\n\n    openModal(isNew, item) {\n      if (isNew) {\n        this.tempProduct = {};\n      } else {\n        this.tempProduct = {\n          ...item\n        };\n      }\n      this.isNew = isNew;\n      const productComponent = this.$refs.productModal;\n      productComponent.showModal();\n    },\n    updateProduct(item) {\n      this.tempProduct = item;\n      let api = `/api/product-data`;\n      let httpMethod = 'post';\n      if (!this.isNew) {\n        api = `/api/product-data/${item.id}`;\n        httpMethod = 'put';\n      }\n      const productComponent = this.$refs.productModal;\n      this.$http[httpMethod](api, this.tempProduct).then(response => {\n        productComponent.hideModal();\n        if (response.data.id) {\n          this.getProducts();\n          this.emitter.emit('push-message', {\n            style: 'success',\n            title: '更新成功'\n          });\n        } else {\n          this.emitter.emit('push-message', {\n            style: 'danger',\n            title: '更新失敗',\n            content: response.data.message.join('、')\n          });\n        }\n      });\n    },\n    openDelProductModal(item) {\n      this.tempProduct = {\n        ...item\n      };\n      const delComponent = this.$refs.delModal;\n      delComponent.showModal();\n    },\n    delProduct() {\n      const url = `/api/product-data/${this.tempProduct.id}`;\n      this.$http.delete(url).then(response => {\n        const delComponent = this.$refs.delModal;\n        delComponent.hideModal();\n        this.getProducts();\n      });\n    }\n  },\n  created() {\n    this.getProducts();\n  }\n};","map":{"version":3,"names":["ProductModal","Pagination","DelModal","data","products","pagination","tempProduct","isNew","isLoading","components","inject","methods","getProducts","page","api","$http","get","then","res","openModal","item","productComponent","$refs","productModal","showModal","updateProduct","httpMethod","id","response","hideModal","emitter","emit","style","title","content","message","join","openDelProductModal","delComponent","delModal","delProduct","url","delete","created"],"sources":["C:\\Users\\2409\\Desktop\\vue3最新\\vue3\\src\\views\\Products.vue"],"sourcesContent":["<template>\r\n   <Loading :active=\"isLoading\"></Loading> \r\n  <div class=\"text-end mt-3\">\r\n    <button class=\"btn btn-primary\" type=\"button\" @click=\"openModal(true)\">\r\n      增加一個產品\r\n    </button>\r\n  </div>\r\n  <table class=\"table mt-4\">\r\n    <thead>\r\n      <tr>\r\n        <th width=\"120\">分類</th>\r\n        <th>產品名稱</th>\r\n        <th width=\"120\">原價</th>\r\n        <th width=\"120\">售價</th>\r\n        <th width=\"100\">是否啟用</th>\r\n        <th width=\"200\">編輯</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr v-for=\"item in products\" :key=\"item.id\">\r\n        <td>{{ item.category }}</td>\r\n        <td>{{ item.title }}</td>\r\n        <td class=\"text-right\">\r\n          {{ $filters.currency(item.origin_price) }}\r\n        </td>\r\n        <td class=\"text-right\">\r\n          {{ $filters.currency(item.price) }}\r\n        </td>\r\n        <td>\r\n          <span class=\"text-success\" v-if=\"item.is_enabled\">啟用</span>\r\n          <span class=\"text-muted\" v-else>未啟用</span>\r\n        </td>\r\n        <td>\r\n          <div class=\"btn-group\">\r\n            <button\r\n              class=\"btn btn-outline-primary btn-sm\"\r\n              @click=\"openModal(false, item)\"\r\n            >\r\n              編輯\r\n            </button>\r\n            <button\r\n              class=\"btn btn-outline-danger btn-sm\"\r\n              @click=\"openDelProductModal(item)\"\r\n            >\r\n              刪除\r\n            </button>\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n  <Pagination :pages=\"pagination\" @emit-pages=\"getProducts\"></Pagination>\r\n  <ProductModal\r\n    ref=\"productModal\"\r\n    :product=\"tempProduct\"\r\n    @update-product=\"updateProduct\"\r\n  ></ProductModal>\r\n  <DelModal :item=\"tempProduct\" ref=\"delModal\" @del-item=\"delProduct\" />\r\n</template>\r\n\r\n<script>\r\nimport ProductModal from '@/components/ProductModal.vue'\r\nimport Pagination from '@/components/Pagination.vue'\r\nimport DelModal from '@/components/DelModal.vue'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      products: [],\r\n      pagination: {}, // 可根据后端返回的分页信息进行更新\r\n      tempProduct: {},\r\n      isNew: false,\r\n      isLoading: false // 這個狀態可以保留，以便未來重新啟用加載功能\r\n    }\r\n  },\r\n  components: {\r\n    ProductModal,\r\n    DelModal,\r\n    Pagination\r\n  },\r\n  inject: ['emitter'],\r\n  methods: {\r\n    getProducts(page = 1) {\r\n      const api = `/api/product-data?page=${page}`\r\n       this.isLoading = true\r\n      this.$http.get(api).then((res) => {\r\n         this.isLoading = false\r\n        this.products = res.data\r\n        // 更新分页信息，根据后端返回的结构\r\n      })\r\n    },\r\n    openModal(isNew, item) {\r\n      if (isNew) {\r\n        this.tempProduct = {}\r\n      } else {\r\n        this.tempProduct = { ...item }\r\n      }\r\n      this.isNew = isNew\r\n      const productComponent = this.$refs.productModal\r\n      productComponent.showModal()\r\n    },\r\n    updateProduct(item) {\r\n      this.tempProduct = item\r\n      let api = `/api/product-data`\r\n      let httpMethod = 'post'\r\n\r\n      if (!this.isNew) {\r\n        api = `/api/product-data/${item.id}`\r\n        httpMethod = 'put'\r\n      }\r\n      const productComponent = this.$refs.productModal\r\n      this.$http[httpMethod](api, this.tempProduct).then(\r\n        (response) => {\r\n          productComponent.hideModal()\r\n          if (response.data.id) {\r\n            this.getProducts()\r\n            this.emitter.emit('push-message', {\r\n              style: 'success',\r\n              title: '更新成功'\r\n            })\r\n          } else {\r\n            this.emitter.emit('push-message', {\r\n              style: 'danger',\r\n              title: '更新失敗',\r\n              content: response.data.message.join('、')\r\n            })\r\n          }\r\n        }\r\n      )\r\n    },\r\n    openDelProductModal(item) {\r\n      this.tempProduct = { ...item }\r\n      const delComponent = this.$refs.delModal\r\n      delComponent.showModal()\r\n    },\r\n    delProduct() {\r\n      const url = `/api/product-data/${this.tempProduct.id}`\r\n      this.$http.delete(url).then((response) => {\r\n        const delComponent = this.$refs.delModal\r\n        delComponent.hideModal()\r\n        this.getProducts()\r\n      })\r\n    }\r\n  },\r\n  created() {\r\n    this.getProducts()\r\n  }\r\n}\r\n</script>\r\n\r\n"],"mappings":"AA6DA,OAAOA,YAAW,MAAO,+BAA8B;AACvD,OAAOC,UAAS,MAAO,6BAA4B;AACnD,OAAOC,QAAO,MAAO,2BAA0B;AAE/C,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,UAAU,EAAE,CAAC,CAAC;MAAE;MAChBC,WAAW,EAAE,CAAC,CAAC;MACfC,KAAK,EAAE,KAAK;MACZC,SAAS,EAAE,KAAI,CAAE;IACnB;EACF,CAAC;;EACDC,UAAU,EAAE;IACVT,YAAY;IACZE,QAAQ;IACRD;EACF,CAAC;EACDS,MAAM,EAAE,CAAC,SAAS,CAAC;EACnBC,OAAO,EAAE;IACPC,WAAWA,CAACC,IAAG,GAAI,CAAC,EAAE;MACpB,MAAMC,GAAE,GAAK,0BAAyBD,IAAK;MAC1C,IAAI,CAACL,SAAQ,GAAI,IAAG;MACrB,IAAI,CAACO,KAAK,CAACC,GAAG,CAACF,GAAG,CAAC,CAACG,IAAI,CAAEC,GAAG,IAAK;QAC/B,IAAI,CAACV,SAAQ,GAAI,KAAI;QACtB,IAAI,CAACJ,QAAO,GAAIc,GAAG,CAACf,IAAG;QACvB;MACF,CAAC;IACH,CAAC;;IACDgB,SAASA,CAACZ,KAAK,EAAEa,IAAI,EAAE;MACrB,IAAIb,KAAK,EAAE;QACT,IAAI,CAACD,WAAU,GAAI,CAAC;MACtB,OAAO;QACL,IAAI,CAACA,WAAU,GAAI;UAAE,GAAGc;QAAK;MAC/B;MACA,IAAI,CAACb,KAAI,GAAIA,KAAI;MACjB,MAAMc,gBAAe,GAAI,IAAI,CAACC,KAAK,CAACC,YAAW;MAC/CF,gBAAgB,CAACG,SAAS,EAAC;IAC7B,CAAC;IACDC,aAAaA,CAACL,IAAI,EAAE;MAClB,IAAI,CAACd,WAAU,GAAIc,IAAG;MACtB,IAAIN,GAAE,GAAK,mBAAiB;MAC5B,IAAIY,UAAS,GAAI,MAAK;MAEtB,IAAI,CAAC,IAAI,CAACnB,KAAK,EAAE;QACfO,GAAE,GAAK,qBAAoBM,IAAI,CAACO,EAAG;QACnCD,UAAS,GAAI,KAAI;MACnB;MACA,MAAML,gBAAe,GAAI,IAAI,CAACC,KAAK,CAACC,YAAW;MAC/C,IAAI,CAACR,KAAK,CAACW,UAAU,CAAC,CAACZ,GAAG,EAAE,IAAI,CAACR,WAAW,CAAC,CAACW,IAAI,CAC/CW,QAAQ,IAAK;QACZP,gBAAgB,CAACQ,SAAS,EAAC;QAC3B,IAAID,QAAQ,CAACzB,IAAI,CAACwB,EAAE,EAAE;UACpB,IAAI,CAACf,WAAW,EAAC;UACjB,IAAI,CAACkB,OAAO,CAACC,IAAI,CAAC,cAAc,EAAE;YAChCC,KAAK,EAAE,SAAS;YAChBC,KAAK,EAAE;UACT,CAAC;QACH,OAAO;UACL,IAAI,CAACH,OAAO,CAACC,IAAI,CAAC,cAAc,EAAE;YAChCC,KAAK,EAAE,QAAQ;YACfC,KAAK,EAAE,MAAM;YACbC,OAAO,EAAEN,QAAQ,CAACzB,IAAI,CAACgC,OAAO,CAACC,IAAI,CAAC,GAAG;UACzC,CAAC;QACH;MACF,EACF;IACF,CAAC;IACDC,mBAAmBA,CAACjB,IAAI,EAAE;MACxB,IAAI,CAACd,WAAU,GAAI;QAAE,GAAGc;MAAK;MAC7B,MAAMkB,YAAW,GAAI,IAAI,CAAChB,KAAK,CAACiB,QAAO;MACvCD,YAAY,CAACd,SAAS,EAAC;IACzB,CAAC;IACDgB,UAAUA,CAAA,EAAG;MACX,MAAMC,GAAE,GAAK,qBAAoB,IAAI,CAACnC,WAAW,CAACqB,EAAG;MACrD,IAAI,CAACZ,KAAK,CAAC2B,MAAM,CAACD,GAAG,CAAC,CAACxB,IAAI,CAAEW,QAAQ,IAAK;QACxC,MAAMU,YAAW,GAAI,IAAI,CAAChB,KAAK,CAACiB,QAAO;QACvCD,YAAY,CAACT,SAAS,EAAC;QACvB,IAAI,CAACjB,WAAW,EAAC;MACnB,CAAC;IACH;EACF,CAAC;EACD+B,OAAOA,CAAA,EAAG;IACR,IAAI,CAAC/B,WAAW,EAAC;EACnB;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}