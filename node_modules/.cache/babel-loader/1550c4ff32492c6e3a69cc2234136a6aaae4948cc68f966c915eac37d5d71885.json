{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nimport useJwt from \"../composables/useJwt\";\nexport default {\n  data() {\n    return {\n      user: {\n        username: \"\",\n        password: \"\"\n      },\n      showPassword: false,\n      isSigningIn: false,\n      errorMessage: \"\"\n    };\n  },\n  setup() {\n    const {\n      setToken\n    } = useJwt();\n    return {\n      setToken\n    };\n  },\n  methods: {\n    async signIn() {\n      this.isSigningIn = true;\n      const loginRequest = {\n        username: this.user.username,\n        password: this.user.password\n      };\n      try {\n        const response = await axios.post(\"/api/login\", loginRequest);\n        if (response.status === 200) {\n          console.log(response.data);\n          this.setToken(response.data.token); // 假設後端回傳的 token 在 response.data.token\n          this.$router.push(\"/dashboard/products\");\n        } else {\n          this.errorMessage = \"Login failed. Please check your credentials.\";\n        }\n      } catch (error) {\n        console.error(\"Login failed:\", error);\n        this.errorMessage = error.response ? error.response.data : \"Login failed. Please check your credentials.\";\n      } finally {\n        this.isSigningIn = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","useJwt","data","user","username","password","showPassword","isSigningIn","errorMessage","setup","setToken","methods","signIn","loginRequest","response","post","status","console","log","token","$router","push","error"],"sources":["/Users/foxyy/Desktop/寫好的/電商spring+vue3 final/ijrgoer/src/views/Login.vue"],"sourcesContent":["<template>\n    <section class=\"hero is-success is-fullheight\">\n      \n      <div class=\"hero-body\">\n        <div class=\"container has-text-centered\">\n          <div class=\"column is-4 is-offset-4\">\n            <h3 class=\"title has-text-black\">Login</h3>\n            <hr class=\"login-hr\">\n            <p class=\"subtitle has-text-black\">Please login to proceed.</p>\n            <div class=\"box\">\n              <figure class=\"avatar\">\n                <img src=\"https://via.placeholder.com/150\">\n              </figure>\n              <form @submit.prevent=\"signIn\">\n                <div class=\"field\">\n                  <div class=\"control\">\n                    <input class=\"input is-large\" type=\"text\" placeholder=\"Your account\" v-model=\"user.username\" autofocus>\n                  </div>\n                </div>\n  \n                <div class=\"field\">\n                  <div class=\"control\">\n                    <input class=\"input is-large\" type=\"password\" placeholder=\"Your Password\" v-model=\"user.password\">\n                  </div>\n                </div>\n                <div class=\"field\">\n                  <label class=\"checkbox\">\n                    <input type=\"checkbox\">\n                    Remember me\n                  </label>\n                </div>\n                <button class=\"button is-block is-info is-large is-fullwidth\" :disabled=\"isSigningIn\">Login <i class=\"fa fa-sign-in\" aria-hidden=\"true\"></i></button>\n              </form>\n            </div>\n            <p class=\"has-text-grey\">\n              <a href=\"../\">Sign Up</a> &nbsp;·&nbsp;\n              <a href=\"../\">Forgot Password</a> &nbsp;·&nbsp;\n              <a href=\"../\">Need Help?</a>\n            </p>\n          </div>\n        </div>\n      </div>\n    </section>\n  </template>\n  \n  \n  <script>\n  import axios from \"axios\";\n  import useJwt from \"../composables/useJwt\";\n  \n  export default {\n    data() {\n      return {\n        user: {\n          username: \"\",\n          password: \"\",\n        },\n        showPassword: false,\n        isSigningIn: false,\n        errorMessage: \"\",\n      };\n    },\n    setup() {\n      const { setToken } = useJwt();\n      return {\n        setToken,\n      };\n    },\n    methods: {\n      async signIn() {\n        this.isSigningIn = true;\n        const loginRequest = {\n          username: this.user.username,\n          password: this.user.password,\n        };\n  \n        try {\n          const response = await axios.post(\"/api/login\", loginRequest);\n          if (response.status === 200) {\n            console.log(response.data);\n            this.setToken(response.data.token);  // 假設後端回傳的 token 在 response.data.token\n            this.$router.push(\"/dashboard/products\");\n          } else {\n            this.errorMessage = \"Login failed. Please check your credentials.\";\n          }\n        } catch (error) {\n          console.error(\"Login failed:\", error);\n          this.errorMessage = error.response ? error.response.data : \"Login failed. Please check your credentials.\";\n        } finally {\n          this.isSigningIn = false;\n        }\n      },\n    },\n  };\n  \n  </script>\n  \n  <style>\n  @import url('https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css');\n  @import url('https://fonts.googleapis.com/css?family=Questrial&display=swap');\n  @import url('https://unpkg.com/bulma@0.9.4/css/bulma.min.css');\n  </style>"],"mappings":";AA+CE,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,MAAK,MAAO,uBAAuB;AAE1C,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE;QACJC,QAAQ,EAAE,EAAE;QACZC,QAAQ,EAAE;MACZ,CAAC;MACDC,YAAY,EAAE,KAAK;MACnBC,WAAW,EAAE,KAAK;MAClBC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,KAAKA,CAAA,EAAG;IACN,MAAM;MAAEC;IAAS,IAAIT,MAAM,EAAE;IAC7B,OAAO;MACLS;IACF,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,MAAMA,CAAA,EAAG;MACb,IAAI,CAACL,WAAU,GAAI,IAAI;MACvB,MAAMM,YAAW,GAAI;QACnBT,QAAQ,EAAE,IAAI,CAACD,IAAI,CAACC,QAAQ;QAC5BC,QAAQ,EAAE,IAAI,CAACF,IAAI,CAACE;MACtB,CAAC;MAED,IAAI;QACF,MAAMS,QAAO,GAAI,MAAMd,KAAK,CAACe,IAAI,CAAC,YAAY,EAAEF,YAAY,CAAC;QAC7D,IAAIC,QAAQ,CAACE,MAAK,KAAM,GAAG,EAAE;UAC3BC,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAACZ,IAAI,CAAC;UAC1B,IAAI,CAACQ,QAAQ,CAACI,QAAQ,CAACZ,IAAI,CAACiB,KAAK,CAAC,EAAG;UACrC,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,qBAAqB,CAAC;QAC1C,OAAO;UACL,IAAI,CAACb,YAAW,GAAI,8CAA8C;QACpE;MACF,EAAE,OAAOc,KAAK,EAAE;QACdL,OAAO,CAACK,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;QACrC,IAAI,CAACd,YAAW,GAAIc,KAAK,CAACR,QAAO,GAAIQ,KAAK,CAACR,QAAQ,CAACZ,IAAG,GAAI,8CAA8C;MAC3G,UAAU;QACR,IAAI,CAACK,WAAU,GAAI,KAAK;MAC1B;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}