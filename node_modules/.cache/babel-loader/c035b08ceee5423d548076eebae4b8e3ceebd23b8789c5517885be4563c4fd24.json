{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nimport useJwt from \"../composables/useJwt\";\nexport default {\n  data() {\n    return {\n      user: {\n        username: \"\",\n        password: \"\"\n      },\n      showPassword: false,\n      isSigningIn: false,\n      errorMessage: \"\"\n    };\n  },\n  setup() {\n    const {\n      setToken\n    } = useJwt();\n    return {\n      setToken\n    };\n  },\n  methods: {\n    async signIn() {\n      this.isSigningIn = true;\n      const loginRequest = {\n        username: this.user.username,\n        password: this.user.password\n      };\n      try {\n        const response = await axios.post(\"/api/login\", loginRequest);\n        if (response.status === 200) {\n          console.log(response.data);\n          this.setToken(response.data.token); // 假設後端回傳的 token 在 response.data.token\n          this.$router.push(\"/dashboard/products\");\n        } else {\n          this.errorMessage = \"Login failed. Please check your credentials.\";\n        }\n      } catch (error) {\n        console.error(\"Login failed:\", error);\n        this.errorMessage = error.response ? error.response.data : \"Login failed. Please check your credentials.\";\n      } finally {\n        this.isSigningIn = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","useJwt","data","user","username","password","showPassword","isSigningIn","errorMessage","setup","setToken","methods","signIn","loginRequest","response","post","status","console","log","token","$router","push","error"],"sources":["/Users/foxyy/Desktop/寫好的/電商spring+vue3 final/ijrgoer/src/views/Login.vue"],"sourcesContent":["<template>\n  <div class=\"whole\">\n    <div class=\"background_div\">\n      <div class=\"login_background\">\n        <div class=\"login_div\">\n          <div class=\"login_header_top_div\"></div>\n          <div class=\"login_header_div\">\n            <div class=\"login_header_logo_div\">\n              <img\n                id=\"login_header_logo_img\"\n                class=\"login_header_logo_img\"\n                src=\"../assets/logo.png\"\n              />\n            </div>\n            <div\n              id=\"header_title_text\"\n              class=\"login_header_text_div\"\n              data-langKey=\"index.header.title.text\"\n            >\n              Hello , Welcome Back!\n            </div>\n          </div>\n          <form\n            id=\"login_input_div\"\n            class=\"login_input_div\"\n            @submit.prevent=\"signIn\"\n          >\n            <div class=\"input_sep_line_2\"></div>\n            <div class=\"input_div\">\n              <input\n                tabindex=\"2\"\n                name=\"userid\"\n                id=\"userid_inputtext\"\n                class=\"login_textfield\"\n                placeholder=\"User ID (4 - 20 characters)\"\n                type=\"text\"\n                spellcheck=\"false\"\n                aria-label=\"User ID\"\n                minlength=\"4\"\n                maxlength=\"250\"\n                autocomplete=\"off\"\n                v-model=\"user.username\"\n              />\n            </div>\n            <div class=\"input_sep_line_3\"></div>\n            <div class=\"input_div\">\n              <input\n                tabindex=\"3\"\n                name=\"password\"\n                id=\"password_inputtext\"\n                class=\"login_textfield\"\n                placeholder=\"Password (4 - 20 characters)\"\n                spellcheck=\"false\"\n                aria-label=\"Password\"\n                :type=\"showPassword ? 'text' : 'password'\"\n                minlength=\"6\"\n                maxlength=\"16\"\n                required\n                v-model=\"user.password\"\n              />\n              <i\n                class=\"fa eye password-icon\"\n                @click=\"showPassword = !showPassword\"\n                :class=\"{\n                  'fa-eye-slash': showPassword,\n                  'fa-eye': !showPassword\n                }\"\n              ></i>\n            </div>\n            <div class=\"input_sep_line_4\"></div>\n            <div class=\"login_message_div\" v-if=\"isSigningIn\">\n              <span class=\"line\" id=\"line1\"></span>\n              <span class=\"line\" id=\"line2\"></span>\n              <span class=\"line\" id=\"line3\"></span>\n              sign in your account now\n            </div>\n            <div id=\"error_message\" v-if=\"errorMessage\">{{ errorMessage }}</div>\n\n            <div class=\"login_button_div\">\n              <div class=\"input_div button_div_first_margin_top\">\n                <button\n                  id=\"normal_login_btn\"\n                  data-step-idx=\"1\"\n                  @click=\"handleClick\"\n                >\n                  <div class=\"login_text_div\">\n                    <span\n                      class=\"login_text\"\n                      data-langKey=\"index.button.login.text\"\n                    >\n                      Sign In\n                    </span>\n                  </div>\n                </button>\n              </div>\n            </div>\n          </form>\n          <div class=\"login_bottom_div\"></div>\n        </div>\n      </div>\n    </div>\n\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport useJwt from \"../composables/useJwt\";\n\nexport default {\n  data() {\n    return {\n      user: {\n        username: \"\",\n        password: \"\",\n      },\n      showPassword: false,\n      isSigningIn: false,\n      errorMessage: \"\",\n    };\n  },\n  setup() {\n    const { setToken } = useJwt();\n    return {\n      setToken,\n    };\n  },\n  methods: {\n    async signIn() {\n      this.isSigningIn = true;\n      const loginRequest = {\n        username: this.user.username,\n        password: this.user.password,\n      };\n\n      try {\n        const response = await axios.post(\"/api/login\", loginRequest);\n        if (response.status === 200) {\n          console.log(response.data);\n          this.setToken(response.data.token);  // 假設後端回傳的 token 在 response.data.token\n          this.$router.push(\"/dashboard/products\");\n        } else {\n          this.errorMessage = \"Login failed. Please check your credentials.\";\n        }\n      } catch (error) {\n        console.error(\"Login failed:\", error);\n        this.errorMessage = error.response ? error.response.data : \"Login failed. Please check your credentials.\";\n      } finally {\n        this.isSigningIn = false;\n      }\n    },\n  },\n};\n\n</script>\n\n"],"mappings":";AA0GA,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,MAAK,MAAO,uBAAuB;AAE1C,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE;QACJC,QAAQ,EAAE,EAAE;QACZC,QAAQ,EAAE;MACZ,CAAC;MACDC,YAAY,EAAE,KAAK;MACnBC,WAAW,EAAE,KAAK;MAClBC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,KAAKA,CAAA,EAAG;IACN,MAAM;MAAEC;IAAS,IAAIT,MAAM,EAAE;IAC7B,OAAO;MACLS;IACF,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,MAAMA,CAAA,EAAG;MACb,IAAI,CAACL,WAAU,GAAI,IAAI;MACvB,MAAMM,YAAW,GAAI;QACnBT,QAAQ,EAAE,IAAI,CAACD,IAAI,CAACC,QAAQ;QAC5BC,QAAQ,EAAE,IAAI,CAACF,IAAI,CAACE;MACtB,CAAC;MAED,IAAI;QACF,MAAMS,QAAO,GAAI,MAAMd,KAAK,CAACe,IAAI,CAAC,YAAY,EAAEF,YAAY,CAAC;QAC7D,IAAIC,QAAQ,CAACE,MAAK,KAAM,GAAG,EAAE;UAC3BC,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAACZ,IAAI,CAAC;UAC1B,IAAI,CAACQ,QAAQ,CAACI,QAAQ,CAACZ,IAAI,CAACiB,KAAK,CAAC,EAAG;UACrC,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,qBAAqB,CAAC;QAC1C,OAAO;UACL,IAAI,CAACb,YAAW,GAAI,8CAA8C;QACpE;MACF,EAAE,OAAOc,KAAK,EAAE;QACdL,OAAO,CAACK,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;QACrC,IAAI,CAACd,YAAW,GAAIc,KAAK,CAACR,QAAO,GAAIQ,KAAK,CAACR,QAAQ,CAACZ,IAAG,GAAI,8CAA8C;MAC3G,UAAU;QACR,IAAI,CAACK,WAAU,GAAI,KAAK;MAC1B;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}