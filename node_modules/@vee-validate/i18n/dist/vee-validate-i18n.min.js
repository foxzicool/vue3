/**
  * vee-validate v4.7.4
  * (c) 2023 Abdelrahman Awad
  * @license MIT
  */
!function(e,o){"object"==typeof exports&&"undefined"!=typeof module?o(exports):"function"==typeof define&&define.amd?define(["exports"],o):o((e="undefined"!=typeof globalThis?globalThis:e||self).VeeValidateI18n={})}(this,(function(e){"use strict";function o(e){return"function"==typeof e}function n(e,o){return e.replace(/(\d:)?{([^}]+)}/g,(function(e,n,t){if(!n||!o.params)return t in o?o[t]:o.params&&t in o.params?o.params[t]:`{${t}}`;if(!Array.isArray(o.params))return t in o.params?o.params[t]:`{${t}}`;const i=Number(n.replace(":",""));return i in o.params?o.params[i]:`${n}{${t}}`}))}function t(e,o){return Object.keys(o).forEach((n=>{if(null!==(i=o[n])&&i&&"object"==typeof i&&!Array.isArray(i))return e[n]||(e[n]={}),void t(e[n],o[n]);var i;e[n]=o[n]})),e}class i{constructor(e,o){this.container={},this.locale=e,this.merge(o)}resolve(e){return this.format(this.locale,e)}getLocaleDefault(e,o){var n,t,i,a,l;return(null===(i=null===(t=null===(n=this.container[e])||void 0===n?void 0:n.fields)||void 0===t?void 0:t[o])||void 0===i?void 0:i._default)||(null===(l=null===(a=this.container[e])||void 0===a?void 0:a.messages)||void 0===l?void 0:l._default)}format(e,t){var i,a,l,r,s,c,d;let u;const{rule:f,form:v,label:m,name:p}=t,h=m||(null===(a=null===(i=this.container[e])||void 0===i?void 0:i.names)||void 0===a?void 0:a[p])||p;return f?(u=(null===(s=null===(r=null===(l=this.container[e])||void 0===l?void 0:l.fields)||void 0===r?void 0:r[p])||void 0===s?void 0:s[f.name])||(null===(d=null===(c=this.container[e])||void 0===c?void 0:c.messages)||void 0===d?void 0:d[f.name]),u||(u=this.getLocaleDefault(e,p)||`${h} is not valid`),o(u)?u(t):n(u,Object.assign(Object.assign({},v),{field:h,params:f.params}))):(u=this.getLocaleDefault(e,p)||`${h} is not valid`,o(u)?u(t):n(u,Object.assign(Object.assign({},v),{field:h})))}merge(e){t(this.container,e)}}let a;function l(e,o){a||(a=new i("en",{}));const n=e=>a.resolve(e);return"string"==typeof e?(a.locale=e,o&&a.merge({[e]:o}),n):(a.merge(e),n)}e.loadLocaleFromURL=async function(e){try{const o=await fetch(e,{headers:{"content-type":"application/json"}}).then((e=>e.json()));if(!o.code)return void console.error("Could not identify locale, ensure the locale file contains `code` field");l({[o.code]:o})}catch(e){console.error("Failed to load locale ")}},e.localize=l,e.setLocale=function(e){a.locale=e},Object.defineProperty(e,"__esModule",{value:!0})}));